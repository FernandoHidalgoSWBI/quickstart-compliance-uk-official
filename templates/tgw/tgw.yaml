AWSTemplateFormatVersion: "2010-09-09"

Description: "Create the transit gateway"

###  Parameters Definition  ###

Parameters:
  SharedServicesPrivateSubAZ1:
    Type: String
  SharedServicesPrivateSubAZ2:
    Type: String
  SharedServicesPrivateSubAZ3:
    Type: String
  SharedServicesVPCId:
    Type: String
  EndpointSubnets:
    Type: String
  EndpointVPCId:
    Type: String
  ProdPrivateSubAZ1:
    Type: String
  ProdPrivateSubAZ2:
    Type: String
  ProdPrivateSubAZ3:
    Type: String
  ProductionVPCId:
    Type: String
  SharedServicesRT:
    Type: String
  EndpointPrivateRT:
    Type: String
  ProductionPrivateRT:
    Type: String
  InternetVPCId:
    Type: String
  EndpointVPCCidr:
    Type: String
    Description: Endpoint VPC CIDR
  InternetVPCCidr:
    Type: String
    Description: Internet VPC CIDR
  ProductionVPCCidr:
    Type: String
    Description: Production VPC CIDR
  SharedVPCCidr:
    Type: String
    Description: Shared VPC CIDR
  InternetPrivateRT:
    Type: String
  ProjectName:
    Type: String

Resources:
  ############################ Create transit Gateway and Attach VPCs ############################
  TransitGateway:
    Type: "AWS::EC2::TransitGateway"
    Properties:
      AutoAcceptSharedAttachments: "enable"
      DefaultRouteTableAssociation: "enable"
      DefaultRouteTablePropagation: "enable"
      Description: "TransitGW"
      DnsSupport: "enable"
      Tags: 
        - Key: "Name"
          Value: "TransitGW"
  SharedServicesTransitGatewayAttachments: 
    Type: "AWS::EC2::TransitGatewayAttachment"
    Properties:
      SubnetIds: 
        - !Ref SharedServicesPrivateSubAZ1
        - !Ref SharedServicesPrivateSubAZ2
        - !Ref SharedServicesPrivateSubAZ3
      TransitGatewayId: !Ref TransitGateway
      VpcId: !Ref SharedServicesVPCId
      Tags:
        - Key: "Name"
          Value: "Shared Services VPC TGW Association"
  EndpointTransitGatewayAttachments: 
    Type: "AWS::EC2::TransitGatewayAttachment"
    Properties:
      SubnetIds: !Split [ ',', !Ref EndpointSubnets ]
      TransitGatewayId: !Ref TransitGateway
      VpcId: !Ref EndpointVPCId
      Tags:
        - Key: "Name"
          Value: "Endpoint VPC TGW Association"
  ProdTransitGatewayAttachments: 
    Type: "AWS::EC2::TransitGatewayAttachment"
    Properties:
      SubnetIds: 
        - !Ref ProdPrivateSubAZ1
        - !Ref ProdPrivateSubAZ2
        - !Ref ProdPrivateSubAZ3
      TransitGatewayId: !Ref TransitGateway
      VpcId: !Ref ProductionVPCId
      Tags:
        - Key: "Name"
          Value: "Production VPC TGW Association"

  ############################ Add routes to Transit Gateway ############################
  ProductionToEndpointRoute:
    DependsOn: ssmEndpoint
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref EndpointVPCCidr
      TransitGatewayId: !Ref TransitGateway
      RouteTableId: !Ref ProductionPrivateRT
                
  EndpointToProductionRoute:
    DependsOn: ssmEndpoint
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref ProductionVPCCidr
      TransitGatewayId: !Ref TransitGateway
      RouteTableId: !Ref EndpointPrivateRT
                
  EndpointToSharedServicesRoute:
    DependsOn: ssmEndpoint
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref SharedVPCCidr
      TransitGatewayId: !Ref TransitGateway
      RouteTableId: !Ref EndpointPrivateRT
                
  SharedServicesToEndpointRoute:
    DependsOn: ssmEndpoint
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref EndpointVPCCidr
      TransitGatewayId: !Ref TransitGateway
      RouteTableId: !Ref SharedServicesRT

  ProductionToSharedServicesRoute:
    DependsOn: ssmEndpoint
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref SharedVPCCidr
      TransitGatewayId: !Ref TransitGateway
      RouteTableId: !Ref ProductionPrivateRT

  SharedServicesToProductionRoute:
    DependsOn: ssmEndpoint
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref ProductionVPCCidr
      TransitGatewayId: !Ref TransitGateway
      RouteTableId: !Ref SharedServicesRT

  ############################ Add VPC Peering ############################

  VPCPeeringConnection:
    Type: AWS::EC2::VPCPeeringConnection
    Properties:
      VpcId: !Ref InternetVPCId
      PeerVpcId: !Ref EndpointVPCId

  LocalPeerRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref EndpointVPCCidr
      VpcPeeringConnectionId: !Ref VPCPeeringConnection
      RouteTableId: !Ref InternetPrivateRT

  RemotePeerRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref InternetVPCCidr
      VpcPeeringConnectionId: !Ref VPCPeeringConnection
      RouteTableId: !Ref EndpointPrivateRT

  ############################ Create endpoints in endpoint VPC ############################

  VPCIdInterfaceEndpointsSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Interface Endpoints"
      VpcId: !Ref EndpointVPCId
      SecurityGroupIngress:
      - IpProtocol: tcp   
        FromPort: '443'
        ToPort: '443'
        CidrIp: 10.0.0.0/8
      - IpProtocol: tcp   
        FromPort: '443'
        ToPort: '443'
        CidrIp: 172.16.0.0/12
      - IpProtocol: tcp   
        FromPort: '443'
        ToPort: '443'
        CidrIp: 192.168.0.0/16

  S3Endpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: '*'
            Action:
              - '*'
            Resource:
              - '*'
      RouteTableIds: 
        - !Ref EndpointPrivateRT
      ServiceName: !Join [ '', [ 'com.amazonaws.', !Ref 'AWS::Region', '.s3' ] ]
      VpcId: !Ref EndpointVPCId

  ec2Endpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref EndpointVPCId
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ec2'
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds: !Split [ ',', !Ref EndpointSubnets ]
      SecurityGroupIds:
        - !Ref VPCIdInterfaceEndpointsSecurityGroup

  ec2MessenegesEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref EndpointVPCId
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ec2messages'
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds: !Split [ ',', !Ref EndpointSubnets ]
      SecurityGroupIds:
        - !Ref VPCIdInterfaceEndpointsSecurityGroup

  ssmEndpoint:
    DependsOn: TransitGateway
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref EndpointVPCId
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ssm'
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds: !Split [ ',', !Ref EndpointSubnets ]
      SecurityGroupIds:
        - !Ref VPCIdInterfaceEndpointsSecurityGroup

  ssmMessagesEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref EndpointVPCId
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ssmmessages'
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds: !Split [ ',', !Ref EndpointSubnets ]
      SecurityGroupIds:
        - !Ref VPCIdInterfaceEndpointsSecurityGroup

  cloudwatchLogsEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref EndpointVPCId
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.logs'
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds: !Split [ ',', !Ref EndpointSubnets ]
      SecurityGroupIds:
        - !Ref VPCIdInterfaceEndpointsSecurityGroup

  cloudwatchMonitoringEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref EndpointVPCId
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.monitoring'
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds: !Split [ ',', !Ref EndpointSubnets ]
      SecurityGroupIds:
        - !Ref VPCIdInterfaceEndpointsSecurityGroup

  ############################ Add VPC Peering ############################

  EC2DNS: 
    Type: "AWS::Route53::HostedZone"
    Properties: 
      HostedZoneConfig: 
        Comment: "A hosted zone for EC2 VPC endpoints"
      Name: !Sub 'ec2.${AWS::Region}.${AWS::URLSuffix}'
      VPCs: 
        -
          VPCId: !Ref InternetVPCId
          VPCRegion: !Ref "AWS::Region"
        -
          VPCId: !Ref SharedServicesVPCId
          VPCRegion: !Ref "AWS::Region"
        -
          VPCId: !Ref ProductionVPCId
          VPCRegion: !Ref "AWS::Region"
      HostedZoneTags: 
        - 
          Key: Name
          Value: !Ref ProjectName

  EC2Record:
    DependsOn: EC2DNS
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: !Sub 'ec2.${AWS::Region}.${AWS::URLSuffix}.'
      Comment: DNS for EC2
      Name: !Sub 'ec2.${AWS::Region}.${AWS::URLSuffix}'
      AliasTarget: 
        DNSName: !Join [ '', [ !Select [ 1, !Split [ ':', !Select [ 0, !GetAtt ec2Endpoint.DnsEntries ] ] ], '.' ] ]
        EvaluateTargetHealth: false
        HostedZoneId: !Select [ 0, !Split [ ':', !Select [ 0, !GetAtt ec2Endpoint.DnsEntries ] ] ]
      Type: A

  EC2MessagesDNS: 
    Type: "AWS::Route53::HostedZone"
    Properties: 
      HostedZoneConfig: 
        Comment: "A hosted zone for EC2 messages VPC endpoints"
      Name: !Sub 'ec2messages.${AWS::Region}.${AWS::URLSuffix}'
      VPCs: 
        -
          VPCId: !Ref InternetVPCId
          VPCRegion: !Ref "AWS::Region"
        -
          VPCId: !Ref SharedServicesVPCId
          VPCRegion: !Ref "AWS::Region"
        -
          VPCId: !Ref ProductionVPCId
          VPCRegion: !Ref "AWS::Region"
      HostedZoneTags: 
        - 
          Key: Name
          Value: !Ref ProjectName

  EC2MessagesRecord:
    DependsOn: EC2MessagesDNS
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: !Sub 'ec2messages.${AWS::Region}.${AWS::URLSuffix}.'
      Comment: DNS for EC2
      Name: !Sub 'ec2messages.${AWS::Region}.${AWS::URLSuffix}'
      AliasTarget: 
        DNSName: !Join [ '', [ !Select [ 1, !Split [ ':', !Select [ 0, !GetAtt ec2MessenegesEndpoint.DnsEntries ] ] ], '.' ] ]
        EvaluateTargetHealth: false
        HostedZoneId: !Select [ 0, !Split [ ':', !Select [ 0, !GetAtt ec2MessenegesEndpoint.DnsEntries ] ] ]
      Type: A

  SSMEndpointDNS:
    Type: "AWS::Route53::HostedZone"
    Properties:
      HostedZoneConfig:
        Comment: "A hosted zone for SSM VPC endpoints"
      Name: !Sub 'ssm.${AWS::Region}.${AWS::URLSuffix}'
      VPCs:
        -
          VPCId: !Ref InternetVPCId
          VPCRegion: !Ref "AWS::Region"
        -
          VPCId: !Ref SharedServicesVPCId
          VPCRegion: !Ref "AWS::Region"
        -
          VPCId: !Ref ProductionVPCId
          VPCRegion: !Ref "AWS::Region"
      HostedZoneTags:
        - 
          Key: Name
          Value: !Ref ProjectName

  SSMRecord:
    DependsOn: SSMEndpointDNS
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: !Sub 'ssm.${AWS::Region}.${AWS::URLSuffix}.'
      Comment: DNS for EC2
      Name: !Sub 'ssm.${AWS::Region}.${AWS::URLSuffix}'
      AliasTarget:
        DNSName: !Join [ '', [ !Select [ 1, !Split [ ':', !Select [ 0, !GetAtt ssmEndpoint.DnsEntries ] ] ], '.' ] ]
        EvaluateTargetHealth: false
        HostedZoneId: !Select [ 0, !Split [ ':', !Select [ 0, !GetAtt ssmEndpoint.DnsEntries ] ] ]
      Type: A

  SSMMessagesDNS:                                                                                           
    Type: "AWS::Route53::HostedZone"                                                                        
    Properties:                                                                                             
      HostedZoneConfig:                                                                                     
        Comment: "A hosted zone for SSM messages VPC endpoints"                                             
      Name: !Sub 'ssmmessages.${AWS::Region}.${AWS::URLSuffix}'                                                 
      VPCs:                                                                                                 
        -                                                                                                   
          VPCId: !Ref InternetVPCId                                                                         
          VPCRegion: !Ref "AWS::Region"                                                                     
        -                                                                                                   
          VPCId: !Ref SharedServicesVPCId                                                                           
          VPCRegion: !Ref "AWS::Region"                                                                     
        -                                                                                                   
          VPCId: !Ref ProductionVPCId                                                                       
          VPCRegion: !Ref "AWS::Region"                                                                     
      HostedZoneTags:                                                                                       
        -                                                                                                   
          Key: Name                                                                                         
          Value: !Ref ProjectName                                                                           
                                                                                                            
  SSMMessagesRecord:                                                                                        
    DependsOn: SSMMessagesDNS
    Type: AWS::Route53::RecordSet                                                                           
    Properties:                                                                                             
      HostedZoneName: !Sub 'ssmmessages.${AWS::Region}.${AWS::URLSuffix}.'                                      
      Comment: DNS for EC2                                                                                  
      Name: !Sub 'ssmmessages.${AWS::Region}.${AWS::URLSuffix}'                                                 
      AliasTarget:                                                                                          
        DNSName: !Join [ '', [ !Select [ 1, !Split [ ':', !Select [ 0, !GetAtt ssmMessagesEndpoint.DnsEntries ] ] ], '.' ] ]          
        EvaluateTargetHealth: false                                                                         
        HostedZoneId: !Select [ 0, !Split [ ':', !Select [ 0, !GetAtt ssmMessagesEndpoint.DnsEntries ] ] ]                            
      Type: A                                                                                               

  cloudwatchLogsDNS:                                                                                           
    Type: "AWS::Route53::HostedZone"                                                                        
    Properties:                                                                                             
      HostedZoneConfig:                                                                                     
        Comment: "A hosted zone for CloudWatch logs VPC endpoints"                                             
      Name: !Sub 'logs.${AWS::Region}.${AWS::URLSuffix}'                                                 
      VPCs:                                                                                                 
        -                                                                                                   
          VPCId: !Ref InternetVPCId                                                                         
          VPCRegion: !Ref "AWS::Region"                                                                     
        -                                                                                                   
          VPCId: !Ref SharedServicesVPCId                                                                           
          VPCRegion: !Ref "AWS::Region"                                                                     
        -                                                                                                   
          VPCId: !Ref ProductionVPCId                                                                       
          VPCRegion: !Ref "AWS::Region"                                                                     
      HostedZoneTags:                                                                                       
        -                                                                                                   
          Key: Name                                                                                         
          Value: !Ref ProjectName                                                                           
                                                                                                            
  cloudwatchLogsRecord:                                                                                        
    DependsOn: cloudwatchLogsDNS
    Type: AWS::Route53::RecordSet                                                                           
    Properties:                                                                                             
      HostedZoneName: !Sub 'logs.${AWS::Region}.${AWS::URLSuffix}.'                                      
      Comment: DNS for CloudWatch logs
      Name: !Sub 'logs.${AWS::Region}.${AWS::URLSuffix}'                                                 
      AliasTarget:                                                                                          
        DNSName: !Join [ '', [ !Select [ 1, !Split [ ':', !Select [ 0, !GetAtt cloudwatchLogsEndpoint.DnsEntries ] ] ], '.' ] ]          
        EvaluateTargetHealth: false                                                                         
        HostedZoneId: !Select [ 0, !Split [ ':', !Select [ 0, !GetAtt cloudwatchLogsEndpoint.DnsEntries ] ] ]                            
      Type: A                                                                                               

  cloudwatchMonitoringDNS:                                                                                           
    Type: "AWS::Route53::HostedZone"                                                                        
    Properties:                                                                                             
      HostedZoneConfig:                                                                                     
        Comment: "A hosted zone for CloudWatch monitoring VPC endpoints"                                             
      Name: !Sub 'monitoring.${AWS::Region}.${AWS::URLSuffix}'                                                 
      VPCs:                                                                                                 
        -                                                                                                   
          VPCId: !Ref InternetVPCId                                                                         
          VPCRegion: !Ref "AWS::Region"                                                                     
        -                                                                                                   
          VPCId: !Ref SharedServicesVPCId                                                                           
          VPCRegion: !Ref "AWS::Region"                                                                     
        -                                                                                                   
          VPCId: !Ref ProductionVPCId                                                                       
          VPCRegion: !Ref "AWS::Region"                                                                     
      HostedZoneTags:                                                                                       
        -                                                                                                   
          Key: Name                                                                                         
          Value: !Ref ProjectName                                                                           
                                                                                                            
  cloudwatchMonitoringRecord:                                                                                        
    DependsOn: cloudwatchMonitoringDNS
    Type: AWS::Route53::RecordSet                                                                           
    Properties:                                                                                             
      HostedZoneName: !Sub 'monitoring.${AWS::Region}.${AWS::URLSuffix}.'                                      
      Comment: DNS for CloudWatch monitoring
      Name: !Sub 'monitoring.${AWS::Region}.${AWS::URLSuffix}'                                                 
      AliasTarget:                                                                                          
        DNSName: !Join [ '', [ !Select [ 1, !Split [ ':', !Select [ 0, !GetAtt cloudwatchMonitoringEndpoint.DnsEntries ] ] ], '.' ] ]          
        EvaluateTargetHealth: false                                                                         
        HostedZoneId: !Select [ 0, !Split [ ':', !Select [ 0, !GetAtt cloudwatchMonitoringEndpoint.DnsEntries  ] ] ]
      Type: A

Outputs:
  Tgw:
    Value: !Ref TransitGateway
  ec2EndpointDNS:
    Value: !Select [ 0, !GetAtt ec2Endpoint.DnsEntries ]
    Export:
      Name: !Sub "${AWS::StackName}-ec2EndpointDNS"
  ec2MessagesEndpointDNS:
    Value: !Select [ 0, !GetAtt ec2MessenegesEndpoint.DnsEntries ]
    Export:
      Name: !Sub "${AWS::StackName}-ec2MessenegesEndpointDNS"
  ssmEndpointDNS:
    Value: !Select [ 0, !GetAtt ssmEndpoint.DnsEntries ]
    Export:
      Name: !Sub "${AWS::StackName}-ssmEndpointDNS"
  ssmMessagesEndpointDNS:
    Value: !Select [ 0, !GetAtt ssmMessagesEndpoint.DnsEntries ]
    Export:
      Name: !Sub "${AWS::StackName}-ssmMessagesEndpointDNS"
  cloudwatchLogsEndpointDNS:
    Value: !Select [ 0, !GetAtt cloudwatchLogsEndpoint.DnsEntries ]
    Export:
      Name: !Sub "${AWS::StackName}-cloudwatchLogsEndpointDNS"
  cloudwatchMonitoringEndpointDNS:
    Value: !Select [ 0, !GetAtt cloudwatchMonitoringEndpoint.DnsEntries ]
    Export:
      Name: !Sub "${AWS::StackName}-cloudwatchMonitoringEndpointDNS"
  AttachmentId:
    Value: !Ref SharedServicesTransitGatewayAttachments
