AWSTemplateFormatVersion: 2010-09-09
Description: Creates a set of instances to allow testing of traffic flow (qs-1s39ksj70)

Parameters:
  EndpointSubnetId:
    Type: String
    Description: Endpoint VPC subnet to deploy to
  SharedSubnetId:
    Type: String
    Description: Endpoint VPC subnet to deploy to
  ProductionSubnetId:
    Type: String
    Description: Endpoint VPC subnet to deploy to
  InternetPrivateSubnetIdA:
    Type: String
    Description: Endpoint VPC subnet to deploy to
  InternetPrivateSubnetIdB:
    Type: String
    Description: Endpoint VPC subnet to deploy to
  InternetPrivateSubnetIdC:
    Type: String
    Description: Endpoint VPC subnet to deploy to
  InternetPublicSubnetId:
    Type: String
    Description: Endpoint VPC subnet to deploy to
  InternetVPCId:
    Type: String
    Description: Production VPC ID
  ProductionVPCId:
    Type: String
    Description: Production VPC ID
  EndpointVPCId:
    Type: String
    Description: Production VPC ID
  SharedVPCId:
    Type: String
    Description: Production VPC ID

Mappings: 
  RegionMap: 
    eu-west-1:
      "HVM64": "ami-099a8245f5daa82bf"
    eu-west-2:
      "HVM64": "ami-0389b2a3c4948b1a0"


Resources:
  Ec2SSMInstanceRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AmazonEC2RoleforSSM

  InternetInstanceSecurityRoute:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Interface Endpoints"
      VpcId: !Ref InternetVPCId

  ProductionInstanceSecurityRoute:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Interface Endpoints"
      VpcId: !Ref ProductionVPCId

  EndpointInstanceSecurityRoute:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Interface Endpoints"
      VpcId: !Ref EndpointVPCId

  SharedInstanceSecurityRoute:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Interface Endpoints"
      VpcId: !Ref SharedVPCId

  Ec2SSMInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: "/"
      Roles:
        - !Ref Ec2SSMInstanceRole

  EndpointInstance: 
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", HVM64]
      InstanceType: t2.micro
      SubnetId: !Ref EndpointSubnetId
      IamInstanceProfile: !Ref Ec2SSMInstanceProfile
      SecurityGroupIds:
        - !GetAtt EndpointInstanceSecurityRoute.GroupId
      Tags:
        - Key: Name
          Value: EndpointPrivateInstance

  ProductionInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", HVM64]
      InstanceType: t2.micro
      SubnetId: !Ref ProductionSubnetId
      IamInstanceProfile: !Ref Ec2SSMInstanceProfile
      SecurityGroupIds:
        - !GetAtt ProductionInstanceSecurityRoute.GroupId
      Tags:
        - Key: Name
          Value: ProductionPrivateInstance

  SharedInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", HVM64]
      InstanceType: t2.micro
      SubnetId: !Ref SharedSubnetId
      IamInstanceProfile: !Ref Ec2SSMInstanceProfile
      SecurityGroupIds:
        - !GetAtt SharedInstanceSecurityRoute.GroupId
      Tags:
        - Key: Name
          Value: SharedPrivateInstance

  InternetPrivateInstanceA:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", HVM64]
      InstanceType: t2.micro
      SubnetId: !Ref InternetPrivateSubnetIdA
      IamInstanceProfile: !Ref Ec2SSMInstanceProfile
      SecurityGroupIds:
        - !GetAtt InternetInstanceSecurityRoute.GroupId
      Tags:
        - Key: Name
          Value: InternetPrivateInstanceA

  InternetPrivateInstanceB:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", HVM64]
      InstanceType: t2.micro
      SubnetId: !Ref InternetPrivateSubnetIdB
      IamInstanceProfile: !Ref Ec2SSMInstanceProfile
      SecurityGroupIds:
        - !GetAtt InternetInstanceSecurityRoute.GroupId
      Tags:
        - Key: Name
          Value: InternetPrivateInstanceB

  InternetPrivateInstanceC:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", HVM64]
      InstanceType: t2.micro
      SubnetId: !Ref InternetPrivateSubnetIdC
      IamInstanceProfile: !Ref Ec2SSMInstanceProfile
      SecurityGroupIds:
        - !GetAtt InternetInstanceSecurityRoute.GroupId
      Tags:
        - Key: Name
          Value: InternetPrivateInstanceC

  InternetPublicInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", HVM64]
      InstanceType: t2.micro
      SubnetId: !Ref InternetPublicSubnetId
      IamInstanceProfile: !Ref Ec2SSMInstanceProfile
      SecurityGroupIds:
        - !GetAtt InternetInstanceSecurityRoute.GroupId
      Tags:
        - Key: Name
          Value: InternetPublicInstance
